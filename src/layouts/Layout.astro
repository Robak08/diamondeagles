---
import "@styles/app.css";
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
import { Toaster } from "@/components/ui/sonner";

const { metaTitle, metaDescription, metaKeywords } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<meta name="apple-mobile-web-app-title" content="Diamond Eagles" />
		<link rel="manifest" href="/site.webmanifest" />
		<meta name="generator" content={Astro.generator} />
		<title>{metaTitle ? metaTitle : "Diamond Eagles USA"}</title>
		<meta
			name="description"
			content={metaDescription
				? metaDescription
				: "Diamond Eagles USA is an honor awarded to the top-performing companies in their industries. Each year, out of thousands of businesses, local market leaders are selected for standing out from the competition through exceptional quality and a commitment to continuous growth."}
		/>
		<meta name="keywords" content={metaKeywords ? metaKeywords : ""} />
		<script is:inline>
			const getThemePreference = () => {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches
					? "dark"
					: "light";
			};
			const isDark = getThemePreference() === "dark";
			document.documentElement.classList[isDark ? "add" : "remove"]("dark");

			if (typeof localStorage !== "undefined") {
				const observer = new MutationObserver(() => {
					const isDark = document.documentElement.classList.contains("dark");
					localStorage.setItem("theme", isDark ? "dark" : "light");
				});
				observer.observe(document.documentElement, {
					attributes: true,
					attributeFilter: ["class"],
				});
			}
		</script>
	</head>
	<body>
		<Navbar />
		<div class="content">
			<slot />
		</div>
		<Footer />
		<Toaster client:load />
	</body>
</html>

<style lang="postcss">
	@reference '@styles/app.css';
	.content {
		@apply min-h-[calc(100vh-65px)];
		@apply px-4 py-6  md:px-12 md:py-12 2xl:py-16;
		@apply flex flex-col justify-center items-center;
	}
</style>
